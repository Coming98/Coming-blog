<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github pages 个人博客搭建部署记录</title>
      <link href="/Coming-blog/2021/04/29/github-pages-ge-ren-bo-ke-da-jian-bu-shu-ji-lu/"/>
      <url>/Coming-blog/2021/04/29/github-pages-ge-ren-bo-ke-da-jian-bu-shu-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>基础版的 Github Pages + Hexo + travis ci 实现个人博客配置</p><p>即使是在众多大佬博客的帮助下，整体配置过程也有些艰辛，让我最头疼的就是网络问题，感觉给 git 配了代理，改了 hosts 也没有什么用</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><strong>Tips</strong>：注意主路线教程中使用的是 travis-ci.org, 这个网站马上就要关闭了，其功能迁移到了 <a target="_blank" rel="noopener" href="https://travis-ci.com/">travis-ci.com</a></p><h2 id="主路线"><a href="#主路线" class="headerlink" title="主路线"></a>主路线</h2><p>【Hexo】使用Hexo+github pages+travis ci 实现自动化部署 - <a target="_blank" rel="noopener" href="https://www.cnblogs.com/mfrank/p/12829882.html">HERE</a></p><p>【Hexo】自定义 Hexo 配置文件 - <a target="_blank" rel="noopener" href="https://www.cnblogs.com/mfrank/p/12830094.html">HERE</a></p><p>【Hexo】Hexo 主题 Matery 配置 - <a target="_blank" rel="noopener" href="https://www.cnblogs.com/mfrank/p/12830097.html">HERE</a></p><h2 id="辅助路线"><a href="#辅助路线" class="headerlink" title="辅助路线"></a>辅助路线</h2><p>主路线使用的主题为 <code>matery</code> 其 官方配置地址 (Github Address) - <a target="_blank" rel="noopener" href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">HERE</a></p><p>比较好看的一个最终话风格 - <a target="_blank" rel="noopener" href="https://matjenin.gitee.io/index.html">HERE</a></p><p>在一些配置文件等遇到的特殊字符转义问题  - <a target="_blank" rel="noopener" href="https://wxnacy.com/2018/01/12/hexo-specific-symbol/">HERE</a></p><p>HEXO 官方主题库 - <a target="_blank" rel="noopener" href="https://hexo.io/themes/">HERE</a></p><p>HEXO 官方ICON库 - <a target="_blank" rel="noopener" href="https://fontawesome.com/icons?d=gallery&p=2">HERE</a></p><p>YAML语言简版教程，便于理解和自定义 <code>*.yml</code> <a target="_blank" rel="noopener" href="http://www.ruanyifeng.com/blog/2016/07/yaml.html">HERE</a></p><p>LiveRe 留言评论功能配置 - <a target="_blank" rel="noopener" href="https://starslove.me/2020/07/08/Hexo-comment/">HERE</a></p><h1 id="Hexo-项目目录"><a href="#Hexo-项目目录" class="headerlink" title="Hexo 项目目录"></a>Hexo 项目目录</h1><h2 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h2><p>实现对目标目录的初始化</p><pre class=" language-shell"><code class="language-shell"># blogname - 为博客项目准备的目录名hexo init blognamecd blognamenup install</code></pre><h2 id="Catalog"><a href="#Catalog" class="headerlink" title="Catalog"></a>Catalog</h2><p><code>_config.yml</code> -</p><p><code>package.json</code> - 是应用程序信息，通常不需要关心</p><p><code>node_moudles</code> - 用来存放 node 相关的模块，通常不需要关心</p><p><code>scaffolds/</code> - 新建文章时的模板文件</p><p><code>source/</code> - 资源文件夹，存放用户资源</p><p><code>theme/</code> - 主题文件夹，<code>_config.yml</code> 将会在此定位使用的主题</p><h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><p>记录日常配置中常用的命令信息</p><h2 id="首次初始化"><a href="#首次初始化" class="headerlink" title="首次初始化"></a>首次初始化</h2><pre class=" language-shell"><code class="language-shell">git init # 初始化本地库git remote add origin github仓库地址 # 创建别名git push -u origin master # 初次提交到目标库</code></pre><h2 id="修改提交"><a href="#修改提交" class="headerlink" title="修改提交"></a>修改提交</h2><pre class=" language-shell"><code class="language-shell"># 修改提交到 `github`cd blognamegit checkout master # 使用master分支hexo new "new blogname" # 新建一遍博文git add .git commit -am "message"git push origin master</code></pre><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><p>注意：配置了 <code>travis ci</code> 会自动检测到博客项目的变更，帮助我们重新部署，因此 <code>修改提交</code> 中不需要重新生成静态文件</p><pre class=" language-shell"><code class="language-shell">hexo clean # 清除缓存和已生成的静态文件hexo generate # 生成静态文件hexo server # 使用静态文件，在本地4000端口进行预览hexo c & hexo g & hexo s # Magic - 达到上述三条命令的效果</code></pre><h1 id="git-push-相关问题"><a href="#git-push-相关问题" class="headerlink" title="git push 相关问题"></a>git push 相关问题</h1><p>OpenSSL SSL_read: Connection was reset, errno 10054</p><pre class=" language-shell"><code class="language-shell">git config --global http.sslVerify "false"</code></pre><p>Failed to connect to github.com port 443:connection timed out</p><pre class=" language-shell"><code class="language-shell">git config --global http.proxy http://127.0.0.1:1080git config --global https.proxy http://127.0.0.1:1080</code></pre><p>上述设置后应该就ok了，如果再次出现问题，取消上述代理设置应该就 ok 了</p><p>什么原理(⊙o⊙)…</p><pre class=" language-shell"><code class="language-shell">git config --global --unset http.proxygit config --global --unset https.proxy</code></pre><h1 id="很小的问题"><a href="#很小的问题" class="headerlink" title="很小的问题"></a>很小的问题</h1><ol><li>在 <code>_config.yml</code> 中配置标题，如果想使用 <code>’</code> 可以使用双引号括起来，在 <code>yaml</code> 语言中 双引号不会对特殊字符转义。</li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my first blog</title>
      <link href="/Coming-blog/2021/04/29/my-first-blog/"/>
      <url>/Coming-blog/2021/04/29/my-first-blog/</url>
      
        <content type="html"><![CDATA[<p>Hello I’m Coming.</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> nparr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> arr</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hybrid </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
